on:
  push:
    branches:
      - main
  workflow_dispatch:  # Dit maakt de destroy job handmatig triggerbaar

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install snapd and OpenTofu
        run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo systemctl enable --now snapd.socket
          sudo snap install opentofu --classic

      - name: Verify OpenTofu installation
        run: |
          which tofu
          tofu --version

      - name: Configure AWS credentials
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        run: |
          echo "AWS environment variables configured."
          echo "Region: $AWS_REGION"

      - name: Run OpenTofu init
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
        run: tofu init

      - name: Validate OpenTofu configuration
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
        run: tofu validate

      - name: Apply OpenTofu configuration
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        run: |
          tofu apply -auto-approve \
            -var "aws_region=${{ env.AWS_REGION }}" \
            -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var "aws_token=${{ secrets.AWS_SESSION_TOKEN }}"

      # Toevoeging: Upload de Terraform state file
      - name: Upload Terraform state as artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: terraform.tfstate

  destroy:
    runs-on: ubuntu-latest
    #needs: deploy  # Zorgt ervoor dat destroy alleen mogelijk is na een succesvolle deploy
    if: ${{ github.event_name == 'workflow_dispatch' }}  # Alleen handmatig uitvoeren via workflow_dispatch
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps: 
      
      - name: Debug output
        run: | 
          echo "GitHub event: ${{ github.event_name }}"


      - name: Check out code
        uses: actions/checkout@v3

      

      - name: Install snapd and OpenTofu
        run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo systemctl enable --now snapd.socket
          sudo snap install opentofu --classic

      - name: Verify OpenTofu installation
        run: |
          which tofu
          tofu --version

      # Toevoeging: Download de Terraform state file
      - name: Download Terraform state
        uses: actions/download-artifact@v4
        with:
          name: terraform-state
          path: terraform.tfstate

      # Toevoeging: Verplaats state file naar de juiste locatie
      #- name: Move state file to working directory
        #run: mv terraform.tfstate .

      - name: Run OpenTofu destroy
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        run: |
          
          tofu destroy -auto-approve \
            -var "aws_region=${{ env.AWS_REGION }}" \
            -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var "aws_token=${{ secrets.AWS_SESSION_TOKEN }}"
