name: Deploy to AWS with OpenTofu

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Handmatige trigger voor de destroy job

env:
  AWS_REGION: ${{ env.AWS_REGION }}  # Gebruik de regio uit de repository omgeving
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install OpenTofu
        run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install opentofu --classic

      - name: Configure AWS credentials
        run: echo "AWS environment variables configured."

      - name: Run OpenTofu init and apply
        run: |
          tofu init
          tofu apply -auto-approve \
            -var "aws_region=${{ env.AWS_REGION }}" \
            -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var "aws_token=${{ secrets.AWS_SESSION_TOKEN }}"

  destroy:
    runs-on: ubuntu-latest
    needs: deploy  # Zorgt ervoor dat destroy alleen mogelijk is na een succesvolle deploy
    if: ${{ github.event_name == 'workflow_dispatch' }}  # Alleen handmatig uitvoeren
    env:
      AWS_REGION: ${{ env.AWS_REGION }}  # Gebruik de regio uit de repository omgeving
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install OpenTofu
        run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install opentofu --classic

      - name: Run OpenTofu destroy
        run: |
          tofu init  # Zorgt ervoor dat de lockbestanden correct worden bijgewerkt
          tofu destroy \
            -var "aws_region=${{ env.AWS_REGION }}" \
            -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var "aws_token=${{ secrets.AWS_SESSION_TOKEN }}"
